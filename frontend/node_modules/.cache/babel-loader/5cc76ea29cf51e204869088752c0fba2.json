{"ast":null,"code":"var _jsxFileName = \"/home/petersonguo/Documents/Hackathons/AssistedReader/src/components/Cam.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport './Cam.css';\nimport Webcam from \"react-webcam\";\nimport Tesseract from \"tesseract.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst videoConstraints = {\n  width: 440,\n  height: 400,\n  facingMode: \"user\"\n};\nexport default function Cam() {\n  _s();\n  const webcamRef = useRef(null);\n  const [text, setText] = useState(\"\");\n  const [toggle, setToggle] = useState(true);\n  const [picture, setPicture] = useState(null);\n  const msg = new SpeechSynthesisUtterance();\n  const takePicture = useCallback(() => {\n    setPicture(webcamRef.current.getScreenshot());\n  }, [webcamRef, setPicture]);\n  useEffect(() => {\n    const interval = setTimeout(() => {\n      const imageSrc = webcamRef.current.getScreenshot();\n      Tesseract.recognize(imageSrc, 'eng', {\n        logger: m => m\n      }).catch(x => {\n        console.error(x);\n      }).then(result => {\n        let txt = \"\";\n        console.log(result.data.text + \": \" + result.data.confidence);\n        if (result.data.confidence > 50) {\n          fetch(\"/autocorrect\", {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              text: result.data.text\n            })\n          }).then(res => res.json()).then(res => {\n            txt = res.text;\n          });\n          console.log(txt);\n        }\n        console.log('speech: ' + text);\n        if (txt.length > 0) {\n          setText(txt);\n          if (!toggle) {\n            msg.txt = txt;\n            window.speechSynthesis.speak(msg);\n          }\n        }\n      });\n    }, 200);\n    return () => clearInterval(interval);\n  }, [webcamRef.current, text, toggle]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-[40px] justify-center items-center flex\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"items-center\",\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        audio: false,\n        ref: webcamRef,\n        screenshotFormat: \"image/jpeg\",\n        videoConstraints: videoConstraints,\n        className: \"w-[440px] h-[400px] border-[5px] border-black rounded-3xl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"font-[30px] mt-[15px]\",\n        children: \"Extracted Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-box extractedText flex justify-center\",\n        children: [\" \", text, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setToggle(!toggle);\n        },\n        className: \"h-[50] m-5\",\n        children: toggle ? 'Start Reading' : 'Stop Reading'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(Cam, \"fDBx6Ow2ku/HKOGiYQCAw6Ai2Nw=\");\n_c = Cam;\nvar _c;\n$RefreshReg$(_c, \"Cam\");","map":{"version":3,"names":["React","useCallback","useEffect","useRef","useState","Webcam","Tesseract","videoConstraints","width","height","facingMode","Cam","webcamRef","text","setText","toggle","setToggle","picture","setPicture","msg","SpeechSynthesisUtterance","takePicture","current","getScreenshot","interval","setTimeout","imageSrc","recognize","logger","m","catch","x","console","error","then","result","txt","log","data","confidence","fetch","method","headers","body","JSON","stringify","res","json","length","window","speechSynthesis","speak","clearInterval"],"sources":["/home/petersonguo/Documents/Hackathons/AssistedReader/src/components/Cam.jsx"],"sourcesContent":["import React, {useCallback, useEffect, useRef, useState} from 'react';\nimport './Cam.css';\nimport Webcam from \"react-webcam\";\nimport Tesseract from \"tesseract.js\";\n\nconst videoConstraints = {\n    width: 440,\n    height: 400,\n    facingMode: \"user\"\n};\n\nexport default function Cam() {\n    const webcamRef = useRef(null);\n    const [text, setText] = useState(\"\");\n    const [toggle, setToggle] = useState(true);\n    const [picture, setPicture] = useState(null);\n    const msg = new SpeechSynthesisUtterance();\n\n    const takePicture = useCallback(() => {\n        setPicture(webcamRef.current.getScreenshot());\n    }, [webcamRef, setPicture]);\n    useEffect(() => {\n        const interval = setTimeout(() => {\n            const imageSrc = webcamRef.current.getScreenshot();\n            Tesseract.recognize(\n                imageSrc, 'eng',\n                {\n                    logger: m => m\n                }\n            )\n                .catch(x => {\n                    console.error(x);\n                })\n                .then(result => {\n                    let txt = \"\";\n                    console.log(result.data.text + \": \" + result.data.confidence);\n                    if (result.data.confidence > 50) {\n                        fetch(\"/autocorrect\", {\n                            method: 'GET',\n                            headers: {\n                                'Content-Type': 'application/json'\n                            },\n                            body: JSON.stringify({\n                                text: result.data.text\n                            })\n                        })\n                            .then(res => res.json())\n                            .then(res => {\n                                txt = res.text;\n                            });\n                        console.log(txt);\n                    }\n                    console.log('speech: ' + text);\n                    if (txt.length > 0) {\n                        setText(txt)\n                        if (!toggle) {\n                            msg.txt = txt;\n                            window.speechSynthesis.speak(msg);\n                        }\n                    }\n                });\n        }, 200);\n        return () => clearInterval(interval);\n    }, [webcamRef.current, text, toggle]);\n\n    return (\n        <div className={\"my-[40px] justify-center items-center flex\"}>\n            <main className=\"items-center\">\n                <Webcam\n                    audio={false}\n                    ref={webcamRef}\n                    screenshotFormat=\"image/jpeg\"\n                    videoConstraints={videoConstraints}\n                    className={\"w-[440px] h-[400px] border-[5px] border-black rounded-3xl\"}\n                />\n                <h1 className={\"font-[30px] mt-[15px]\"}>Extracted Text</h1>\n                <p className=\"text-box extractedText flex justify-center\"> {text} </p>\n                <button onClick={() => {\n                    setToggle(!toggle)\n                }} className={\"h-[50] m-5\"}>\n                    {toggle ? 'Start Reading' : 'Stop Reading'}\n                </button>\n            </main>\n        </div>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}