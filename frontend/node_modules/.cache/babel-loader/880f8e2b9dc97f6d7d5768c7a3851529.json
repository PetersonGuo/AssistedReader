{"ast":null,"code":"var _regeneratorRuntime = require(\"/home/petersonguo/Documents/Projects/AssistedReader/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/home/petersonguo/Documents/Projects/AssistedReader/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar createWorker = require('./createWorker');\nvar recognize = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(image, langs, options) {\n    var worker;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return createWorker(langs, 1, options);\n          case 2:\n            worker = _context2.sent;\n            return _context2.abrupt(\"return\", worker.recognize(image).finally( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n              return _regeneratorRuntime().wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return worker.terminate();\n                    case 2:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            }))));\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return function recognize(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar detect = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(image, options) {\n    var worker;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return createWorker('osd', 0, options);\n          case 2:\n            worker = _context4.sent;\n            return _context4.abrupt(\"return\", worker.detect(image).finally( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n              return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _context3.next = 2;\n                      return worker.terminate();\n                    case 2:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, _callee3);\n            }))));\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return function detect(_x4, _x5) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nmodule.exports = {\n  recognize: recognize,\n  detect: detect\n};","map":{"version":3,"names":["createWorker","require","recognize","image","langs","options","worker","finally","terminate","detect","module","exports"],"sources":["/home/petersonguo/Documents/Projects/AssistedReader/node_modules/tesseract.js/src/Tesseract.js"],"sourcesContent":["const createWorker = require('./createWorker');\n\nconst recognize = async (image, langs, options) => {\n  const worker = await createWorker(langs, 1, options);\n  return worker.recognize(image)\n    .finally(async () => {\n      await worker.terminate();\n    });\n};\n\nconst detect = async (image, options) => {\n  const worker = await createWorker('osd', 0, options);\n  return worker.detect(image)\n    .finally(async () => {\n      await worker.terminate();\n    });\n};\n\nmodule.exports = {\n  recognize,\n  detect,\n};\n"],"mappings":";;AAAA,IAAMA,YAAY,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAE9C,IAAMC,SAAS;EAAA,sEAAG,kBAAOC,KAAK,EAAEC,KAAK,EAAEC,OAAO;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OACvBL,YAAY,CAACI,KAAK,EAAE,CAAC,EAAEC,OAAO,CAAC;UAAA;YAA9CC,MAAM;YAAA,kCACLA,MAAM,CAACJ,SAAS,CAACC,KAAK,CAAC,CAC3BI,OAAO,0EAAC;cAAA;gBAAA;kBAAA;oBAAA;sBAAA;sBAAA,OACDD,MAAM,CAACE,SAAS,EAAE;oBAAA;oBAAA;sBAAA;kBAAA;gBAAA;cAAA;YAAA,CACzB,GAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACL;EAAA,gBANKN,SAAS;IAAA;EAAA;AAAA,GAMd;AAED,IAAMO,MAAM;EAAA,uEAAG,kBAAON,KAAK,EAAEE,OAAO;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OACbL,YAAY,CAAC,KAAK,EAAE,CAAC,EAAEK,OAAO,CAAC;UAAA;YAA9CC,MAAM;YAAA,kCACLA,MAAM,CAACG,MAAM,CAACN,KAAK,CAAC,CACxBI,OAAO,0EAAC;cAAA;gBAAA;kBAAA;oBAAA;sBAAA;sBAAA,OACDD,MAAM,CAACE,SAAS,EAAE;oBAAA;oBAAA;sBAAA;kBAAA;gBAAA;cAAA;YAAA,CACzB,GAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACL;EAAA,gBANKC,MAAM;IAAA;EAAA;AAAA,GAMX;AAEDC,MAAM,CAACC,OAAO,GAAG;EACfT,SAAS,EAATA,SAAS;EACTO,MAAM,EAANA;AACF,CAAC"},"metadata":{},"sourceType":"script"}