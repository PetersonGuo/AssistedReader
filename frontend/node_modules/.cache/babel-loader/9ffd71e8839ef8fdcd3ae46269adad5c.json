{"ast":null,"code":"var _jsxFileName = \"/home/petersonguo/Documents/Hackathons/AssistedReader/src/components/Cam.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './Cam.css';\nimport Webcam from \"react-webcam\";\nimport Tesseract from \"tesseract.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst videoConstraints = {\n  width: 440,\n  height: 400,\n  facingMode: \"user\"\n};\nexport default function Cam() {\n  _s();\n  const webcamRef = useRef(null);\n  const [text, setText] = useState(\"\");\n  const [toggle, setToggle] = useState(true);\n  const msg = new SpeechSynthesisUtterance();\n  const OCR = () => {\n    Tesseract.recognize(webcamRef.current.getScreenshot(), 'eng').catch(x => {\n      console.error(x);\n    }).then(result => {\n      let txt = result.data.text;\n      console.log(txt + \": \" + result.data.confidence);\n      if (result.data.confidence > 50) {\n        autoCorrect();\n        console.log('autocorrected: ' + text);\n      }\n      console.log('speech: ' + text);\n      if (!toggle) {\n        msg.txt = text;\n        window.speechSynthesis.speak(msg);\n      }\n    });\n  };\n  const autoCorrect = () => {\n    fetch(\"/autocorrect\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        text: text\n      })\n    }).then(res => res.json()).then(response => {\n      setText(response.text);\n    });\n  };\n  useEffect(() => {\n    const interval = setInterval(() => OCR, 10);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-[40px] justify-center items-center flex\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"items-center\",\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        audio: false,\n        ref: webcamRef,\n        screenshotFormat: \"image/jpeg\",\n        videoConstraints: videoConstraints,\n        className: \"w-[440px] h-[400px] border-[5px] border-black rounded-3xl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"font-[30px] mt-[15px]\",\n        children: \"Extracted Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-box extractedText flex justify-center\",\n        children: [\" \", text, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setToggle(!toggle);\n        },\n        className: \"h-[50] m-5\",\n        children: toggle ? 'Start Reading' : 'Stop Reading'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(Cam, \"nl+ZXntqFAuwwwmMFW1R6K9e8lI=\");\n_c = Cam;\nvar _c;\n$RefreshReg$(_c, \"Cam\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Webcam","Tesseract","videoConstraints","width","height","facingMode","Cam","webcamRef","text","setText","toggle","setToggle","msg","SpeechSynthesisUtterance","OCR","recognize","current","getScreenshot","catch","x","console","error","then","result","txt","data","log","confidence","autoCorrect","window","speechSynthesis","speak","fetch","method","headers","body","JSON","stringify","res","json","response","interval","setInterval"],"sources":["/home/petersonguo/Documents/Hackathons/AssistedReader/src/components/Cam.jsx"],"sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport './Cam.css';\nimport Webcam from \"react-webcam\";\nimport Tesseract from \"tesseract.js\";\n\nconst videoConstraints = {\n    width: 440,\n    height: 400,\n    facingMode: \"user\"\n};\n\nexport default function Cam() {\n    const webcamRef = useRef(null);\n    const [text, setText] = useState(\"\");\n    const [toggle, setToggle] = useState(true);\n    const msg = new SpeechSynthesisUtterance();\n\n    const OCR = () => {\n        Tesseract.recognize(\n            webcamRef.current.getScreenshot(), 'eng'\n        )\n            .catch(x => {\n                console.error(x);\n            })\n            .then(result => {\n                let txt = result.data.text;\n                console.log(txt + \": \" + result.data.confidence);\n                if (result.data.confidence > 50) {\n                    autoCorrect();\n                    console.log('autocorrected: ' + text);\n                }\n                console.log('speech: ' + text);\n                if (!toggle) {\n                    msg.txt = text;\n                    window.speechSynthesis.speak(msg);\n                }\n            });\n    };\n\n    const autoCorrect = () => {\n        fetch(\"/autocorrect\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                text: text\n            })\n        })\n            .then(res => res.json())\n            .then(response => {\n                setText(response.text);\n            });\n    }\n\n    useEffect(() => {\n        const interval = setInterval(() => OCR, 10);\n    });\n\n    return (\n        <div className={\"my-[40px] justify-center items-center flex\"}>\n            <main className=\"items-center\">\n                <Webcam\n                    audio={false}\n                    ref={webcamRef}\n                    screenshotFormat=\"image/jpeg\"\n                    videoConstraints={videoConstraints}\n                    className={\"w-[440px] h-[400px] border-[5px] border-black rounded-3xl\"}\n                />\n                <h1 className={\"font-[30px] mt-[15px]\"}>Extracted Text</h1>\n                <p className=\"text-box extractedText flex justify-center\"> {text} </p>\n                <button onClick={() => {\n                    setToggle(!toggle)\n                }} className={\"h-[50] m-5\"}>\n                    {toggle ? 'Start Reading' : 'Stop Reading'}\n                </button>\n            </main>\n        </div>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}