{"ast":null,"code":"var _regeneratorRuntime = require(\"/home/petersonguo/Documents/Projects/AssistedReader/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/home/petersonguo/Documents/Projects/AssistedReader/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n/**\n * readFromBlobOrFile\n *\n * @name readFromBlobOrFile\n * @function\n * @access private\n */\nvar readFromBlobOrFile = function readFromBlobOrFile(blob) {\n  return new Promise(function (resolve, reject) {\n    var fileReader = new FileReader();\n    fileReader.onload = function () {\n      resolve(fileReader.result);\n    };\n    fileReader.onerror = function (_ref) {\n      var code = _ref.target.error.code;\n      reject(Error(\"File could not be read! Code=\".concat(code)));\n    };\n    fileReader.readAsArrayBuffer(blob);\n  });\n};\n\n/**\n * loadImage\n *\n * @name loadImage\n * @function load image from different source\n * @access private\n */\nvar loadImage = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(image) {\n    var data, resp, blob;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            data = image;\n            if (!(typeof image === 'undefined')) {\n              _context2.next = 3;\n              break;\n            }\n            return _context2.abrupt(\"return\", 'undefined');\n          case 3:\n            if (!(typeof image === 'string')) {\n              _context2.next = 16;\n              break;\n            }\n            if (!/data:image\\/([a-zA-Z]*);base64,([^\"]*)/.test(image)) {\n              _context2.next = 8;\n              break;\n            }\n            data = atob(image.split(',')[1]).split('').map(function (c) {\n              return c.charCodeAt(0);\n            });\n            _context2.next = 14;\n            break;\n          case 8:\n            _context2.next = 10;\n            return fetch(image);\n          case 10:\n            resp = _context2.sent;\n            _context2.next = 13;\n            return resp.arrayBuffer();\n          case 13:\n            data = _context2.sent;\n          case 14:\n            _context2.next = 43;\n            break;\n          case 16:\n            if (!(typeof HTMLElement !== 'undefined' && image instanceof HTMLElement)) {\n              _context2.next = 30;\n              break;\n            }\n            if (!(image.tagName === 'IMG')) {\n              _context2.next = 21;\n              break;\n            }\n            _context2.next = 20;\n            return loadImage(image.src);\n          case 20:\n            data = _context2.sent;\n          case 21:\n            if (!(image.tagName === 'VIDEO')) {\n              _context2.next = 25;\n              break;\n            }\n            _context2.next = 24;\n            return loadImage(image.poster);\n          case 24:\n            data = _context2.sent;\n          case 25:\n            if (!(image.tagName === 'CANVAS')) {\n              _context2.next = 28;\n              break;\n            }\n            _context2.next = 28;\n            return new Promise(function (resolve) {\n              image.toBlob( /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(blob) {\n                  return _regeneratorRuntime().wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return readFromBlobOrFile(blob);\n                        case 2:\n                          data = _context.sent;\n                          resolve();\n                        case 4:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n                return function (_x2) {\n                  return _ref3.apply(this, arguments);\n                };\n              }());\n            });\n          case 28:\n            _context2.next = 43;\n            break;\n          case 30:\n            if (!(typeof OffscreenCanvas !== 'undefined' && image instanceof OffscreenCanvas)) {\n              _context2.next = 39;\n              break;\n            }\n            _context2.next = 33;\n            return image.convertToBlob();\n          case 33:\n            blob = _context2.sent;\n            _context2.next = 36;\n            return readFromBlobOrFile(blob);\n          case 36:\n            data = _context2.sent;\n            _context2.next = 43;\n            break;\n          case 39:\n            if (!(image instanceof File || image instanceof Blob)) {\n              _context2.next = 43;\n              break;\n            }\n            _context2.next = 42;\n            return readFromBlobOrFile(image);\n          case 42:\n            data = _context2.sent;\n          case 43:\n            return _context2.abrupt(\"return\", new Uint8Array(data));\n          case 44:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return function loadImage(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nmodule.exports = loadImage;","map":{"version":3,"names":["readFromBlobOrFile","blob","Promise","resolve","reject","fileReader","FileReader","onload","result","onerror","code","target","error","Error","readAsArrayBuffer","loadImage","image","data","test","atob","split","map","c","charCodeAt","fetch","resp","arrayBuffer","HTMLElement","tagName","src","poster","toBlob","OffscreenCanvas","convertToBlob","File","Blob","Uint8Array","module","exports"],"sources":["/home/petersonguo/Documents/Projects/AssistedReader/node_modules/tesseract.js/src/worker/browser/loadImage.js"],"sourcesContent":["/**\n * readFromBlobOrFile\n *\n * @name readFromBlobOrFile\n * @function\n * @access private\n */\nconst readFromBlobOrFile = (blob) => (\n  new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      resolve(fileReader.result);\n    };\n    fileReader.onerror = ({ target: { error: { code } } }) => {\n      reject(Error(`File could not be read! Code=${code}`));\n    };\n    fileReader.readAsArrayBuffer(blob);\n  })\n);\n\n/**\n * loadImage\n *\n * @name loadImage\n * @function load image from different source\n * @access private\n */\nconst loadImage = async (image) => {\n  let data = image;\n  if (typeof image === 'undefined') {\n    return 'undefined';\n  }\n\n  if (typeof image === 'string') {\n    // Base64 Image\n    if (/data:image\\/([a-zA-Z]*);base64,([^\"]*)/.test(image)) {\n      data = atob(image.split(',')[1])\n        .split('')\n        .map((c) => c.charCodeAt(0));\n    } else {\n      const resp = await fetch(image);\n      data = await resp.arrayBuffer();\n    }\n  } else if (typeof HTMLElement !== 'undefined' && image instanceof HTMLElement) {\n    if (image.tagName === 'IMG') {\n      data = await loadImage(image.src);\n    }\n    if (image.tagName === 'VIDEO') {\n      data = await loadImage(image.poster);\n    }\n    if (image.tagName === 'CANVAS') {\n      await new Promise((resolve) => {\n        image.toBlob(async (blob) => {\n          data = await readFromBlobOrFile(blob);\n          resolve();\n        });\n      });\n    }\n  } else if (typeof OffscreenCanvas !== 'undefined' && image instanceof OffscreenCanvas) {\n    const blob = await image.convertToBlob();\n    data = await readFromBlobOrFile(blob);\n  } else if (image instanceof File || image instanceof Blob) {\n    data = await readFromBlobOrFile(image);\n  }\n\n  return new Uint8Array(data);\n};\n\nmodule.exports = loadImage;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMA,kBAAkB,GAAG,SAArBA,kBAAkB,CAAIC,IAAI;EAAA,OAC9B,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;IAC/B,IAAMC,UAAU,GAAG,IAAIC,UAAU,EAAE;IACnCD,UAAU,CAACE,MAAM,GAAG,YAAM;MACxBJ,OAAO,CAACE,UAAU,CAACG,MAAM,CAAC;IAC5B,CAAC;IACDH,UAAU,CAACI,OAAO,GAAG,gBAAqC;MAAA,IAAfC,IAAI,QAAvBC,MAAM,CAAIC,KAAK,CAAIF,IAAI;MAC7CN,MAAM,CAACS,KAAK,wCAAiCH,IAAI,EAAG,CAAC;IACvD,CAAC;IACDL,UAAU,CAACS,iBAAiB,CAACb,IAAI,CAAC;EACpC,CAAC,CAAC;AAAA,CACH;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMc,SAAS;EAAA,uEAAG,kBAAOC,KAAK;IAAA;IAAA;MAAA;QAAA;UAAA;YACxBC,IAAI,GAAGD,KAAK;YAAA,MACZ,OAAOA,KAAK,KAAK,WAAW;cAAA;cAAA;YAAA;YAAA,kCACvB,WAAW;UAAA;YAAA,MAGhB,OAAOA,KAAK,KAAK,QAAQ;cAAA;cAAA;YAAA;YAAA,KAEvB,wCAAwC,CAACE,IAAI,CAACF,KAAK,CAAC;cAAA;cAAA;YAAA;YACtDC,IAAI,GAAGE,IAAI,CAACH,KAAK,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAC7BA,KAAK,CAAC,EAAE,CAAC,CACTC,GAAG,CAAC,UAACC,CAAC;cAAA,OAAKA,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC;YAAA,EAAC;YAAC;YAAA;UAAA;YAAA;YAAA,OAEZC,KAAK,CAACR,KAAK,CAAC;UAAA;YAAzBS,IAAI;YAAA;YAAA,OACGA,IAAI,CAACC,WAAW,EAAE;UAAA;YAA/BT,IAAI;UAAA;YAAA;YAAA;UAAA;YAAA,MAEG,OAAOU,WAAW,KAAK,WAAW,IAAIX,KAAK,YAAYW,WAAW;cAAA;cAAA;YAAA;YAAA,MACvEX,KAAK,CAACY,OAAO,KAAK,KAAK;cAAA;cAAA;YAAA;YAAA;YAAA,OACZb,SAAS,CAACC,KAAK,CAACa,GAAG,CAAC;UAAA;YAAjCZ,IAAI;UAAA;YAAA,MAEFD,KAAK,CAACY,OAAO,KAAK,OAAO;cAAA;cAAA;YAAA;YAAA;YAAA,OACdb,SAAS,CAACC,KAAK,CAACc,MAAM,CAAC;UAAA;YAApCb,IAAI;UAAA;YAAA,MAEFD,KAAK,CAACY,OAAO,KAAK,QAAQ;cAAA;cAAA;YAAA;YAAA;YAAA,OACtB,IAAI1B,OAAO,CAAC,UAACC,OAAO,EAAK;cAC7Ba,KAAK,CAACe,MAAM;gBAAA,uEAAC,iBAAO9B,IAAI;kBAAA;oBAAA;sBAAA;wBAAA;0BAAA;0BAAA,OACTD,kBAAkB,CAACC,IAAI,CAAC;wBAAA;0BAArCgB,IAAI;0BACJd,OAAO,EAAE;wBAAC;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA,CACX;gBAAA;kBAAA;gBAAA;cAAA,IAAC;YACJ,CAAC,CAAC;UAAA;YAAA;YAAA;UAAA;YAAA,MAEK,OAAO6B,eAAe,KAAK,WAAW,IAAIhB,KAAK,YAAYgB,eAAe;cAAA;cAAA;YAAA;YAAA;YAAA,OAChEhB,KAAK,CAACiB,aAAa,EAAE;UAAA;YAAlChC,IAAI;YAAA;YAAA,OACGD,kBAAkB,CAACC,IAAI,CAAC;UAAA;YAArCgB,IAAI;YAAA;YAAA;UAAA;YAAA,MACKD,KAAK,YAAYkB,IAAI,IAAIlB,KAAK,YAAYmB,IAAI;cAAA;cAAA;YAAA;YAAA;YAAA,OAC1CnC,kBAAkB,CAACgB,KAAK,CAAC;UAAA;YAAtCC,IAAI;UAAA;YAAA,kCAGC,IAAImB,UAAU,CAACnB,IAAI,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAC5B;EAAA,gBAvCKF,SAAS;IAAA;EAAA;AAAA,GAuCd;AAEDsB,MAAM,CAACC,OAAO,GAAGvB,SAAS"},"metadata":{},"sourceType":"script"}